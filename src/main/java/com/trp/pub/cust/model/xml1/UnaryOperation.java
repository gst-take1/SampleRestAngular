//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.14 at 11:54:57 AM EDT 
//

package com.trp.pub.cust.model.xml1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for UnaryOperation complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="UnaryOperation">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;group ref="{http://trp/inv/atlas/1.0}Expression"/>
 *       &lt;attribute name="op" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UnaryOperation", namespace = "http://trp/inv/atlas/1.0", propOrder = {
        "attrRef", "literal", "paramRef", "array", "functionCall", "group",
        "comparison", "connective", "not" })
public class UnaryOperation {

    @XmlElement(name = "AttrRef")
    protected BinaryOperation.AttrRef attrRef;
    @XmlElementRef(name = "Literal", namespace = "http://trp/inv/atlas/1.0", type = JAXBElement.class)
    protected JAXBElement<BinaryOperation.Literal> literal;
    @XmlElement(name = "ParamRef")
    protected BinaryOperation.ParamRef paramRef;
    @XmlElement(name = "Array")
    protected BinaryOperation.Array array;
    @XmlElement(name = "FunctionCall")
    protected BinaryOperation.FunctionCall functionCall;
    @XmlElement(name = "Group")
    protected BinaryOperation.Group group;
    @XmlElement(name = "Comparison")
    protected BinaryOperation comparison;
    @XmlElement(name = "Connective")
    protected BinaryOperation connective;
    @XmlElement(name = "Not")
    protected UnaryOperation not;
    @XmlAttribute(required = true)
    protected String op;

    /**
     * Gets the value of the attrRef property.
     * 
     * @return possible object is {@link BinaryOperation.AttrRef }
     * 
     */
    public BinaryOperation.AttrRef getAttrRef() {
        return attrRef;
    }

    /**
     * Sets the value of the attrRef property.
     * 
     * @param value
     *            allowed object is {@link BinaryOperation.AttrRef }
     * 
     */
    public void setAttrRef(BinaryOperation.AttrRef value) {
        this.attrRef = value;
    }

    /**
     * Gets the value of the literal property.
     * 
     * @return possible object is {@link JAXBElement }{@code <}
     *         {@link BinaryOperation.Literal }{@code >}
     * 
     */
    public JAXBElement<BinaryOperation.Literal> getLiteral() {
        return literal;
    }

    /**
     * Sets the value of the literal property.
     * 
     * @param value
     *            allowed object is {@link JAXBElement }{@code <}
     *            {@link BinaryOperation.Literal }{@code >}
     * 
     */
    public void setLiteral(JAXBElement<BinaryOperation.Literal> value) {
        this.literal = ((JAXBElement<BinaryOperation.Literal>) value);
    }

    /**
     * Gets the value of the paramRef property.
     * 
     * @return possible object is {@link BinaryOperation.ParamRef }
     * 
     */
    public BinaryOperation.ParamRef getParamRef() {
        return paramRef;
    }

    /**
     * Sets the value of the paramRef property.
     * 
     * @param value
     *            allowed object is {@link BinaryOperation.ParamRef }
     * 
     */
    public void setParamRef(BinaryOperation.ParamRef value) {
        this.paramRef = value;
    }

    /**
     * Gets the value of the array property.
     * 
     * @return possible object is {@link BinaryOperation.Array }
     * 
     */
    public BinaryOperation.Array getArray() {
        return array;
    }

    /**
     * Sets the value of the array property.
     * 
     * @param value
     *            allowed object is {@link BinaryOperation.Array }
     * 
     */
    public void setArray(BinaryOperation.Array value) {
        this.array = value;
    }

    /**
     * Gets the value of the functionCall property.
     * 
     * @return possible object is {@link BinaryOperation.FunctionCall }
     * 
     */
    public BinaryOperation.FunctionCall getFunctionCall() {
        return functionCall;
    }

    /**
     * Sets the value of the functionCall property.
     * 
     * @param value
     *            allowed object is {@link BinaryOperation.FunctionCall }
     * 
     */
    public void setFunctionCall(BinaryOperation.FunctionCall value) {
        this.functionCall = value;
    }

    /**
     * Gets the value of the group property.
     * 
     * @return possible object is {@link BinaryOperation.Group }
     * 
     */
    public BinaryOperation.Group getGroup() {
        return group;
    }

    /**
     * Sets the value of the group property.
     * 
     * @param value
     *            allowed object is {@link BinaryOperation.Group }
     * 
     */
    public void setGroup(BinaryOperation.Group value) {
        this.group = value;
    }

    /**
     * Gets the value of the comparison property.
     * 
     * @return possible object is {@link BinaryOperation }
     * 
     */
    public BinaryOperation getComparison() {
        return comparison;
    }

    /**
     * Sets the value of the comparison property.
     * 
     * @param value
     *            allowed object is {@link BinaryOperation }
     * 
     */
    public void setComparison(BinaryOperation value) {
        this.comparison = value;
    }

    /**
     * Gets the value of the connective property.
     * 
     * @return possible object is {@link BinaryOperation }
     * 
     */
    public BinaryOperation getConnective() {
        return connective;
    }

    /**
     * Sets the value of the connective property.
     * 
     * @param value
     *            allowed object is {@link BinaryOperation }
     * 
     */
    public void setConnective(BinaryOperation value) {
        this.connective = value;
    }

    /**
     * Gets the value of the not property.
     * 
     * @return possible object is {@link UnaryOperation }
     * 
     */
    public UnaryOperation getNot() {
        return not;
    }

    /**
     * Sets the value of the not property.
     * 
     * @param value
     *            allowed object is {@link UnaryOperation }
     * 
     */
    public void setNot(UnaryOperation value) {
        this.not = value;
    }

    /**
     * Gets the value of the op property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getOp() {
        return op;
    }

    /**
     * Sets the value of the op property.
     * 
     * @param value
     *            allowed object is {@link String }
     * 
     */
    public void setOp(String value) {
        this.op = value;
    }

}
